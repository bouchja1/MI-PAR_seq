/* 
 * File:   ParentNode.cpp
 * Author: Babu
 * 
 * Created on 20. říjen 2012, 21:31
 */

#include "ParentNode.h"
#include "LeafNode.h"

ParentNode::ParentNode(unsigned int maxHammWeight, unsigned int level, bool value) : Node(maxHammWeight, level, value) {
    this->isLeaf = false;
}

ParentNode::~ParentNode() {
}

Node* ParentNode::makeRightFalseNode(unsigned int treeHeight) {    
    Node * n;
    unsigned int childMaxHammWeight = maxHammWeight - 1;
    if (treeHeight - level == 1) {//we make it at the last level so we now need the leafs
        n = new LeafNode(childMaxHammWeight, 1, false);
    } else {
        n = new ParentNode(childMaxHammWeight, level - 1, false);
    }
    return n;
}

Node* ParentNode::makeLeftTrueNode(unsigned int treeHeight) {
    Node * n;
    unsigned int childMaxHammWeight = maxHammWeight;

    if (treeHeight - level == 1) {//we make it at the last level so we now need the leafs
        n = new LeafNode(childMaxHammWeight, 1, true);
    } else {
        n = new ParentNode(childMaxHammWeight, level - 1, true);
    }
    return n;
}
